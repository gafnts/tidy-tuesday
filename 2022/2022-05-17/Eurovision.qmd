# Eurovision

```{r}
pacman::p_load(tidyverse, magrittr, here)
```

### Import and wrangling

```{r}
votes_raw <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-05-17/eurovision-votes.csv") %>% 
  transmute(year,
           event = factor(semi_final),
           vote_type = factor(str_to_lower(jury_or_televoting)),
           from = factor(from_country),
           to = factor(to_country),
           points)
```

```{r}
# Votes by type of event in 2022
votes <- 
  votes_raw %>% 
  filter(year == 2022) %>% 
  select(-year) %>% 
  pivot_wider(names_from = event, values_from = points) %>% 
  arrange(from, to, vote_type) %>% 
  relocate(from, to, vote_type) %>% 
  mutate(across(where(is.numeric), ~ replace_na(.x, 0))) %>% 
  group_by(from, to) %>% 
  summarise(
    semi_one = sum(sf1),
    semi_two = sum(sf2),
    final = sum(f)
  ) %>% 
  ungroup()
```

```{r}
# Top 15 most voted countries
countries <- 
  votes %>% 
  select(to, final) %>% 
  group_by(to) %>% 
  summarise(total = sum(final)) %>% 
  arrange(desc(total)) %>% 
  head(15) %>% 
  mutate(to = as.character(to)) %>% 
  pull(to)
```

```{r}
# Long relative weight matrix 
weights <- 
  votes %>% 
  filter(from %in% countries & to %in% countries) %>% 
  select(from, to, final) %>% 
  pivot_wider(names_from = to, values_from = final) %>% 
  mutate(across(where(is.numeric), ~ replace_na(.x, 0))) %>% 
  rowwise() %>% 
  mutate(total = sum(c_across(where(is.numeric)))) %>% 
  mutate(across(where(is.numeric), ~ .x / total)) %>% 
  select(-total) %>% 
  pivot_longer(-from, names_to = "key") %>% 
  drop_na()
```

### Base chord diagram

```{r}
pacman::p_load(circlize, MetBrewer, cowplot, ggplotify, ggtext)
```

```{r}
circos.clear()
circos.par(start.degree = 45, 
           gap.degree = 1, 
           track.margin = c(-0.1, 0.1), 
           points.overflow.warning = FALSE)

hiroshige <- met.brewer("Hiroshige", n = 15, type = "continuous")
color <- "#F7F7F7"
```

```{r}
chord_diagram <- 
  as.ggplot(~chordDiagram(
    x = weights, 
    grid.col = hiroshige,
    transparency = 0.15,
    directional = 1,
    direction.type = c("diffHeight", "arrows"), 
    diffHeight  = 0,
    annotationTrackHeight = c(0.15, 0.1),
    link.arr.type = "big.arrow", 
    link.sort = TRUE, 
    link.largest.ontop = TRUE))
```

```{r}
chord_diagram + 
  labs(title = "How did the <b style='color:#3D739C'>15 countries</b> 
       that received the most<br>votes cast theirs in the 
       <b style='color:#F2C073'>Eurovision grand final</b>?", 
       subtitle = "Turin, 2022\n",
       caption = "Source: Data.World") +
  theme(
    text = element_text(family = "Circular Std Book"),
    plot.title = element_markdown(size = 15, 
                                  family = "Circular Std Black",
                                  lineheight = 1.3,
                                  margin = margin(t = 25, b = -15)),
    plot.subtitle = element_text(vjust = -10),
    plot.margin = margin(t = -0.375, r = .95, b = 0.375, l = .95, unit = "cm"),
    panel.background = element_rect(fill = color, color = color),
    plot.background = element_rect(fill = color))
```

```{r}
ggsave(here("2022", "2022-05-17", "plot.jpg"), 
       width = 1920, height = 1920, dpi = 320, units = "px")
```

### 
